#!/bin/bash

# Copyright 2008 Eugene V. Lyubimkin aka JackYF
# License: GPLv3
# Devoted to Evgenija V. Katyuk.

# Checking for root priviledges
MY_UID=`id -u`
if [ "$MY_UID" != "0" ]; then
	echo "You must run daptup with root priviledges."
	exit 2
fi

DAPTUP_CONFFILE=/etc/daptup.conf
if [ -f $DAPTUP_CONFFILE ]; then
	. $DAPTUP_CONFFILE
else
	echo "Cannot read configuration from '$DAPTUP_CONFFILE'."
	exit 1
fi

DAPTUP_USE_COLOR=y

PARAM=$1
case $PARAM in
	--nocolor)
		DAPTUP_USE_COLOR=n	
		;;
	-h|--help)
		echo "Usage: run '`basename ${0}`' with root priviledges."
		exit 0
		;;
	*)
		if [ "$PARAM" != "" ]; then
			echo "Unknown param: $PARAM"
			exit 4
		fi
		;;
esac

DAPTUP_ERRORS_FILE=/tmp/daptup-errors-container
DAPTUP_TMP_FILE=/tmp/daptup-tmp

# $1 - output
# $2 - errors
function get_new()
{
	aptitude search ~N --display-format "$DAPTUP_NEW_DISPLAY_FORMAT" --width $DAPTUP_NEW_DISPLAY_WIDTH > $1 2> $2
}

# $1 - output
function get_updates()
{
	apt-show-versions -u | sort > $1
}

# $1 - before
# $2 - after
# $3 - where result will be stored
function diff_cmd()
{
	diff --minimal $1 $2 | grep -E "^[<>]" | sort > $3
}

echo -n "Getting pre-new... "
get_new $DAPTUP_NEW_BEFORE $DAPTUP_ERRORS_FILE

APTITUDE_RESULT=`wc -l < $DAPTUP_ERRORS_FILE`
if [ "$APTITUDE_RESULT" != "0" ]; then
	echo "errors present. Is apt/dpkg running?.."
	exit 8
fi
echo "[done]"

echo -n "Getting pre-updates... "
get_updates $DAPTUP_UPDATES_BEFORE
echo "[done]"

aptitude update
APTITUDE_RESULT=$?
if [ "$APTITUDE_RESULT" != "0" ]; then
	echo "aptitude returned non-zero code, daptup stopped here."
	exit $?
fi


echo -n "Getting post-new... "
get_new $DAPTUP_NEW_AFTER /dev/null
echo "[done]"

echo -n "Getting post-updates... "
get_updates $DAPTUP_UPDATES_AFTER
echo "[done]"

if [ "$DAPTUP_USE_COLOR" == "y" ]; then
	tput init
fi

# by default daptup tries to use colors now, it can be disabled by specifying '--nocolor' option

echo

diff_cmd $DAPTUP_UPDATES_BEFORE $DAPTUP_UPDATES_AFTER $DAPTUP_TMP_FILE
if [ "`wc -l < $DAPTUP_TMP_FILE`" == "0" ]; then # no updates
	echo "No updates."
else
	echo "Updates:"
	cat $DAPTUP_TMP_FILE | sed s/upgradeable\ from/-/g | while read line; do
		if [ "$DAPTUP_USE_COLOR" == "y" ]; then
			if [ "`expr "$line" : '<'`" == "0" ]; then
				tput setf 2; # green
			else
				tput setf 4; # red
			fi;
		fi;
		echo $line;
		done
fi

# resetting to default color if needed...
if [ "$DAPTUP_USE_COLOR" == "y" ]; then
	tput sgr0
fi

diff_cmd $DAPTUP_NEW_BEFORE $DAPTUP_NEW_AFTER $DAPTUP_TMP_FILE
if [ "`wc -l < $DAPTUP_TMP_FILE`" == "0" ]; then # no new
	echo "No new packages."
else
	echo "New packages:"
	cat $DAPTUP_TMP_FILE | while read line; do
		if [ "$DAPTUP_USE_COLOR" == "y" ]; then
			if [ "`expr "$line" : '<'`" == "0" ]; then
				tput setf 3; # blue
			else
				tput setf 4; # red
			fi;
		fi;
		echo $line;
		done
fi

# resetting to default color if needed...
if [ "$DAPTUP_USE_COLOR" == "y" ]; then
	tput sgr0
fi

rm $DAPTUP_TMP_FILE 2>/dev/null
rm $DAPTUP_ERRORS_FILE 2>/dev/null
